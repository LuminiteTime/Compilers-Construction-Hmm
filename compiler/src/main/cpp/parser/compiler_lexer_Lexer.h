/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class compiler_lexer_Lexer */

#ifndef _Included_compiler_lexer_Lexer
#define _Included_compiler_lexer_Lexer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     compiler_lexer_Lexer
 * Method:    initializeParser
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_compiler_lexer_Lexer_initializeParser
  (JNIEnv *, jobject);

/*
 * Class:     compiler_lexer_Lexer
 * Method:    parseInput
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_compiler_lexer_Lexer_parseInput
  (JNIEnv *, jobject, jstring);

/*
 * Class:     compiler_lexer_Lexer
 * Method:    nextTokenJNI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_compiler_lexer_Lexer_nextTokenJNI
  (JNIEnv *, jobject);

/*
 * Class:     compiler_lexer_Lexer
 * Method:    getLexemeJNI
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_compiler_lexer_Lexer_getLexemeJNI
  (JNIEnv *, jobject);

/*
 * Class:     compiler_lexer_Lexer
 * Method:    getTypeJNI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_compiler_lexer_Lexer_getTypeJNI
  (JNIEnv *, jobject);

/*
 * Class:     compiler_lexer_Lexer
 * Method:    getLineJNI
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_compiler_lexer_Lexer_getLineJNI
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif